import pytest
from aiogram.types import InlineKeyboardMarkup
from bot.keyboards import get_tracking_habit_keyboard, users_choice, UserCBData


class TestKeyboards:
    """Test cases for keyboard-related functions.

    This class contains tests to ensure that the keyboard generation functions
    (like `get_tracking_habit_keyboard` and `users_choice`) work as expected.
    Each test checks the structure and properties of the generated keyboard.
    """

    @pytest.fixture
    def user_id(self):
        """Fixture for providing a mock user_id.

        This fixture is used to simulate a user ID that will be passed
        into tests for generating keyboards.

        Returns:
            int: A mock user ID (123).
        """
        return 123

    def test_get_tracking_habit_keyboard(self, user_id):
        """Test the keyboard for tracking habits.

        This test ensures that the keyboard generated by the `get_tracking_habit_keyboard`
        function contains the correct number of rows and buttons, and that the buttons
        have the correct text and callback data.

        Args:
            user_id (int): The user ID used for generating the callback data.
        """
        keyboard = get_tracking_habit_keyboard(user_id)

        assert isinstance(keyboard, InlineKeyboardMarkup)

        assert len(keyboard.inline_keyboard) == 1

        assert len(keyboard.inline_keyboard[0]) == 2

        first_button = keyboard.inline_keyboard[0][0]
        assert first_button.text == "Подивитися всі мої звички"
        assert first_button.callback_data == f"view_all_habits_{user_id}"

        second_button = keyboard.inline_keyboard[0][1]
        assert second_button.text == "Додати нову звичку"
        assert second_button.callback_data == "add_new_habit"

    def test_users_choice(self):
        """Test the user's choice keyboard.

        This test ensures that the keyboard generated by the `users_choice`
        function contains two buttons: "Guest" and "Register". It checks that
        the correct callback data is associated with each button.

        """
        keyboard = users_choice()

        assert isinstance(keyboard, InlineKeyboardMarkup)

        assert len(keyboard.inline_keyboard) == 1

        assert len(keyboard.inline_keyboard[0]) == 2

        guest_button = keyboard.inline_keyboard[0][0]
        assert guest_button.text == "Гість"
        assert guest_button.callback_data == UserCBData(action="guest").pack()

        register_button = keyboard.inline_keyboard[0][1]
        assert register_button.text == "Реєстрація"
        assert register_button.callback_data == UserCBData(action="register").pack()
